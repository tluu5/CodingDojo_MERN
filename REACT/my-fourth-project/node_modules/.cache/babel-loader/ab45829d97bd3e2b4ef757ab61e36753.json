{"ast":null,"code":"var _jsxFileName = \"/Users/brianluu/Desktop/CodingDojo_MERN/REACT/my-fourth-project/src/components/Pixel.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Pixel extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onClickHandler = () => {\n      if (!this.state.filled) {\n        this.setState({\n          filled: true\n        });\n      } else {\n        this.setState({\n          filled: false\n        });\n      }\n    };\n\n    this.state = {\n      filled: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      onClicker: this.onClickHandler,\n      className: this.state.filled ? \"pixel filled\" : \"pixel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Pixel;","map":{"version":3,"sources":["/Users/brianluu/Desktop/CodingDojo_MERN/REACT/my-fourth-project/src/components/Pixel.js"],"names":["React","Component","Pixel","constructor","props","onClickHandler","state","filled","setState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;AACA,MAAMC,KAAN,SAAoBD,SAApB,CAA6B;AACzBE,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAMlBC,cANkB,GAMD,MAAM;AACnB,UAAG,CAAC,KAAKC,KAAL,CAAWC,MAAf,EAAsB;AAClB,aAAKC,QAAL,CAAc;AACVD,UAAAA,MAAM,EAAE;AADE,SAAd;AAGH,OAJD,MAKI;AACA,aAAKC,QAAL,CAAc;AACVD,UAAAA,MAAM,EAAE;AADE,SAAd;AAGH;AACJ,KAjBiB;;AAEd,SAAKD,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE;AADC,KAAb;AAGH;;AAaDE,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAK,MAAA,SAAS,EAAE,KAAKJ,cAArB;AAAqC,MAAA,SAAS,EAAE,KAAKC,KAAL,CAAWC,MAAX,GAAoB,cAApB,GAAqC;AAArF;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;;AAvBwB;;AAyB7B,eAAeL,KAAf","sourcesContent":["import React, {Component} from 'react';\nclass Pixel extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            filled: false\n        }\n    }\n    onClickHandler = () => {\n        if(!this.state.filled){\n            this.setState({\n                filled: true\n            })\n        }\n        else{\n            this.setState({\n                filled: false\n            })\n        }\n    }\n    render(){\n        return(\n            <div onClicker={this.onClickHandler} className={this.state.filled ? \"pixel filled\" : \"pixel\"}></div>\n        )\n    }\n}\nexport default Pixel;"]},"metadata":{},"sourceType":"module"}